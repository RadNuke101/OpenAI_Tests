# Start time: 2024-03-30 22:04:53.218649

# Content: Given that given input as ['Launa', 'Withers'] output is Withers, L., given input as ['Launa', 'Withers'] output is Withers, L., given input as ['Launa', 'Withers'] output is Withers, L., given input as ['Lakenya', 'Edison'] output is Edison, L., given input as ['Lakenya', 'Edison'] output is Edison, L., given input as ['Lakenya', 'Edison'] output is Edison, L., given input as ['Brendan', 'Hage'] output is Hage, B., given input as ['Brendan', 'Hage'] output is Hage, B., given input as ['Brendan', 'Hage'] output is Hage, B., given input as ['Bradford', 'Lango'] output is Lango, B., given input as ['Bradford', 'Lango'] output is Lango, B., given input as ['Bradford', 'Lango'] output is Lango, B., given input as ['Rudolf', 'Akiyama'] output is Akiyama, R., given input as ['Rudolf', 'Akiyama'] output is Akiyama, R., given input as ['Rudolf', 'Akiyama'] output is Akiyama, R., given input as ['Lara', 'Constable'] output is Constable, L., given input as ['Lara', 'Constable'] output is Constable, L., given input as ['Lara', 'Constable'] output is Constable, L., given input as ['Madelaine', 'Ghoston'] output is Ghoston, M., given input as ['Madelaine', 'Ghoston'] output is Ghoston, M., given input as ['Madelaine', 'Ghoston'] output is Ghoston, M., given input as ['Salley', 'Hornak'] output is Hornak, S., given input as ['Salley', 'Hornak'] output is Hornak, S., given input as ['Salley', 'Hornak'] output is Hornak, S., given input as ['Micha', 'Junkin'] output is Junkin, M., given input as ['Micha', 'Junkin'] output is Junkin, M., given input as ['Micha', 'Junkin'] output is Junkin, M., given input as ['Teddy', 'Bobo'] output is Bobo, T., given input as ['Teddy', 'Bobo'] output is Bobo, T., given input as ['Teddy', 'Bobo'] output is Bobo, T., given input as ['Coralee', 'Scalia'] output is Scalia, C., given input as ['Coralee', 'Scalia'] output is Scalia, C., given input as ['Coralee', 'Scalia'] output is Scalia, C., given input as ['Jeff', 'Quashie'] output is Quashie, J., given input as ['Jeff', 'Quashie'] output is Quashie, J., given input as ['Jeff', 'Quashie'] output is Quashie, J., given input as ['Vena', 'Babiarz'] output is Babiarz, V., given input as ['Vena', 'Babiarz'] output is Babiarz, V., given input as ['Vena', 'Babiarz'] output is Babiarz, V., given input as ['Karrie', 'Lain'] output is Lain, K., given input as ['Karrie', 'Lain'] output is Lain, K., given input as ['Karrie', 'Lain'] output is Lain, K., given input as ['Tobias', 'Dermody'] output is Dermody, T., given input as ['Tobias', 'Dermody'] output is Dermody, T., given input as ['Tobias', 'Dermody'] output is Dermody, T., given input as ['Celsa', 'Hopkins'] output is Hopkins, C., given input as ['Celsa', 'Hopkins'] output is Hopkins, C., given input as ['Celsa', 'Hopkins'] output is Hopkins, C., given input as ['Kimberley', 'Halpern'] output is Halpern, K., given input as ['Kimberley', 'Halpern'] output is Halpern, K., given input as ['Kimberley', 'Halpern'] output is Halpern, K., given input as ['Phillip', 'Rowden'] output is Rowden, P., given input as ['Phillip', 'Rowden'] output is Rowden, P., given input as ['Phillip', 'Rowden'] output is Rowden, P., given input as ['Elias', 'Neil'] output is Neil, E., given input as ['Elias', 'Neil'] output is Neil, E., given input as ['Elias', 'Neil'] output is Neil, E., given input as ['Lashanda', 'Cortes'] output is Cortes, L., given input as ['Lashanda', 'Cortes'] output is Cortes, L., given input as ['Lashanda', 'Cortes'] output is Cortes, L., given input as ['Mackenzie', 'Spell'] output is Spell, M., given input as ['Mackenzie', 'Spell'] output is Spell, M., given input as ['Mackenzie', 'Spell'] output is Spell, M., given input as ['Kathlyn', 'Eccleston'] output is Eccleston, K., given input as ['Kathlyn', 'Eccleston'] output is Eccleston, K., given input as ['Kathlyn', 'Eccleston'] output is Eccleston, K., given input as ['Georgina', 'Brescia'] output is Brescia, G., given input as ['Georgina', 'Brescia'] output is Brescia, G., given input as ['Georgina', 'Brescia'] output is Brescia, G., given input as ['Beata', 'Miah'] output is Miah, B., given input as ['Beata', 'Miah'] output is Miah, B., given input as ['Beata', 'Miah'] output is Miah, B., given input as ['Desiree', 'Seamons'] output is Seamons, D., given input as ['Desiree', 'Seamons'] output is Seamons, D., given input as ['Desiree', 'Seamons'] output is Seamons, D., given input as ['Jeanice', 'Soderstrom'] output is Soderstrom, J., given input as ['Jeanice', 'Soderstrom'] output is Soderstrom, J., given input as ['Jeanice', 'Soderstrom'] output is Soderstrom, J., given input as ['Mariel', 'Jurgens'] output is Jurgens, M., given input as ['Mariel', 'Jurgens'] output is Jurgens, M., given input as ['Mariel', 'Jurgens'] output is Jurgens, M., given input as ['Alida', 'Bogle'] output is Bogle, A., given input as ['Alida', 'Bogle'] output is Bogle, A., given input as ['Alida', 'Bogle'] output is Bogle, A., given input as ['Jacqualine', 'Olague'] output is Olague, J., given input as ['Jacqualine', 'Olague'] output is Olague, J., given input as ['Jacqualine', 'Olague'] output is Olague, J., given input as ['Joaquin', 'Clasen'] output is Clasen, J., given input as ['Joaquin', 'Clasen'] output is Clasen, J., given input as ['Joaquin', 'Clasen'] output is Clasen, J., given input as ['Samuel', 'Richert'] output is Richert, S., given input as ['Samuel', 'Richert'] output is Richert, S., given input as ['Samuel', 'Richert'] output is Richert, S., given input as ['Malissa', 'Marcus'] output is Marcus, M., given input as ['Malissa', 'Marcus'] output is Marcus, M., given input as ['Malissa', 'Marcus'] output is Marcus, M., given input as ['Alaina', 'Partida'] output is Partida, A., given input as ['Alaina', 'Partida'] output is Partida, A., given input as ['Alaina', 'Partida'] output is Partida, A., given input as ['Trinidad', 'Mulloy'] output is Mulloy, T., given input as ['Trinidad', 'Mulloy'] output is Mulloy, T., given input as ['Trinidad', 'Mulloy'] output is Mulloy, T., given input as ['Carlene', 'Garrard'] output is Garrard, C., given input as ['Carlene', 'Garrard'] output is Garrard, C., given input as ['Carlene', 'Garrard'] output is Garrard, C., given input as ['Melodi', 'Chism'] output is Chism, M., given input as ['Melodi', 'Chism'] output is Chism, M., given input as ['Melodi', 'Chism'] output is Chism, M., given input as ['Bess', 'Chilcott'] output is Chilcott, B., given input as ['Bess', 'Chilcott'] output is Chilcott, B., given input as ['Bess', 'Chilcott'] output is Chilcott, B., given input as ['Chong', 'Aylward'] output is Aylward, C., given input as ['Chong', 'Aylward'] output is Aylward, C., given input as ['Chong', 'Aylward'] output is Aylward, C., given input as ['Jani', 'Ramthun'] output is Ramthun, J., given input as ['Jani', 'Ramthun'] output is Ramthun, J., given input as ['Jani', 'Ramthun'] output is Ramthun, J., given input as ['Jacquiline', 'Heintz'] output is Heintz, J., given input as ['Jacquiline', 'Heintz'] output is Heintz, J., given input as ['Jacquiline', 'Heintz'] output is Heintz, J., given input as ['Hayley', 'Marquess'] output is Marquess, H., given input as ['Hayley', 'Marquess'] output is Marquess, H., given input as ['Hayley', 'Marquess'] output is Marquess, H., given input as ['Andria', 'Spagnoli'] output is Spagnoli, A., given input as ['Andria', 'Spagnoli'] output is Spagnoli, A., given input as ['Andria', 'Spagnoli'] output is Spagnoli, A., given input as ['Irwin', 'Covelli'] output is Covelli, I., given input as ['Irwin', 'Covelli'] output is Covelli, I., given input as ['Irwin', 'Covelli'] output is Covelli, I., given input as ['Gertude', 'Montiel'] output is Montiel, G., given input as ['Gertude', 'Montiel'] output is Montiel, G., given input as ['Gertude', 'Montiel'] output is Montiel, G., given input as ['Stefany', 'Reily'] output is Reily, S., given input as ['Stefany', 'Reily'] output is Reily, S., given input as ['Stefany', 'Reily'] output is Reily, S., given input as ['Rae', 'Mcgaughey'] output is Mcgaughey, R., given input as ['Rae', 'Mcgaughey'] output is Mcgaughey, R., given input as ['Rae', 'Mcgaughey'] output is Mcgaughey, R., given input as ['Cruz', 'Latimore'] output is Latimore, C., given input as ['Cruz', 'Latimore'] output is Latimore, C., given input as ['Cruz', 'Latimore'] output is Latimore, C., given input as ['Maryann', 'Casler'] output is Casler, M., given input as ['Maryann', 'Casler'] output is Casler, M., given input as ['Maryann', 'Casler'] output is Casler, M., given input as ['Annalisa', 'Gregori'] output is Gregori, A., given input as ['Annalisa', 'Gregori'] output is Gregori, A., given input as ['Annalisa', 'Gregori'] output is Gregori, A., given input as ['Jenee', 'Pannell'] output is Pannell, J., given input as ['Jenee', 'Pannell'] output is Pannell, J., given input as ['Jenee', 'Pannell'] output is Pannell, J., given input as ['Launa', 'Withers'] output is Withers, L., given input as ['Lakenya', 'Edison'] output is Edison, L., given input as ['Brendan', 'Hage'] output is Hage, B., given input as ['Bradford', 'Lango'] output is Lango, B., given input as ['Rudolf', 'Akiyama'] output is Akiyama, R., given input as ['Lara', 'Constable'] output is Constable, L., given input as ['Madelaine', 'Ghoston'] output is Ghoston, M., given input as ['Salley', 'Hornak'] output is Hornak, S., given input as ['Micha', 'Junkin'] output is Junkin, M., given input as ['Teddy', 'Bobo'] output is Bobo, T., given input as ['Coralee', 'Scalia'] output is Scalia, C., given input as ['Jeff', 'Quashie'] output is Quashie, J., given input as ['Vena', 'Babiarz'] output is Babiarz, V., given input as ['Karrie', 'Lain'] output is Lain, K., given input as ['Tobias', 'Dermody'] output is Dermody, T., given input as ['Celsa', 'Hopkins'] output is Hopkins, C., given input as ['Kimberley', 'Halpern'] output is Halpern, K., given input as ['Phillip', 'Rowden'] output is Rowden, P., given input as ['Elias', 'Neil'] output is Neil, E., given input as ['Lashanda', 'Cortes'] output is Cortes, L., given input as ['Mackenzie', 'Spell'] output is Spell, M., given input as ['Kathlyn', 'Eccleston'] output is Eccleston, K., given input as ['Georgina', 'Brescia'] output is Brescia, G., given input as ['Beata', 'Miah'] output is Miah, B., given input as ['Desiree', 'Seamons'] output is Seamons, D., given input as ['Jeanice', 'Soderstrom'] output is Soderstrom, J., given input as ['Mariel', 'Jurgens'] output is Jurgens, M., given input as ['Alida', 'Bogle'] output is Bogle, A., given input as ['Jacqualine', 'Olague'] output is Olague, J., given input as ['Joaquin', 'Clasen'] output is Clasen, J., given input as ['Samuel', 'Richert'] output is Richert, S., given input as ['Malissa', 'Marcus'] output is Marcus, M., given input as ['Alaina', 'Partida'] output is Partida, A., given input as ['Trinidad', 'Mulloy'] output is Mulloy, T., given input as ['Carlene', 'Garrard'] output is Garrard, C., given input as ['Melodi', 'Chism'] output is Chism, M., given input as ['Bess', 'Chilcott'] output is Chilcott, B., given input as ['Chong', 'Aylward'] output is Aylward, C., given input as ['Jani', 'Ramthun'] output is Ramthun, J., given input as ['Jacquiline', 'Heintz'] output is Heintz, J., given input as ['Hayley', 'Marquess'] output is Marquess, H., given input as ['Andria', 'Spagnoli'] output is Spagnoli, A., given input as ['Irwin', 'Covelli'] output is Covelli, I., given input as ['Gertude', 'Montiel'] output is Montiel, G., given input as ['Stefany', 'Reily'] output is Reily, S., given input as ['Rae', 'Mcgaughey'] output is Mcgaughey, R., given input as ['Cruz', 'Latimore'] output is Latimore, C., given input as ['Maryann', 'Casler'] output is Casler, M., given input as ['Annalisa', 'Gregori'] output is Gregori, A., given input as ['Jenee', 'Pannell'] output is Pannell, J., , generate a python function that matches the given input and output above, treating the input and output as strings, not lists. Add the input and output statements to the comment section of the generated python code. Incorporate exception handling with proper try catch blocks to handle all types of input exceptions. The code should be clean to run at a command prompt without any non-code and include above input in test cases. Do not include the output of the test code in the python program. Generated python code should have only executable statements and comments, nothng else.

def format_name(name):
    try:
        # Split the input name into first name and last name
        first_name, last_name = name.split()
        
        # Format the output as Last Name, First Initial
        output = f"{last_name.capitalize()}, {first_name[0].upper()}."
        
        return output
    except (IndexError, ValueError):
        return "Invalid input format. Please provide first name and last name separated by a space."

# Test cases
print(format_name('Launa Withers'))  # Output should be Withers, L.
print(format_name('Lakenya Edison'))  # Output should be Edison, L.
print(format_name('Brendan Hage'))  # Output should be Hage, B.
print(format_name('Bradford Lango'))  # Output should be Lango, B.
print(format_name('Rudolf Akiyama'))  # Output should be Akiyama, R.
print(format_name('Lara Constable'))  # Output should be Constable, L.
print(format_name('Madelaine Ghoston'))  # Output should be Ghoston, M.
print(format_name('Salley Hornak'))  # Output should be Hornak, S.
print(format_name('Micha Junkin'))  # Output should be Junkin, M.
print(format_name('Teddy Bobo'))  # Output should be Bobo, T.
print(format_name('Coralee Scalia'))  # Output should be Scalia, C.
print(format_name('Jeff Quashie'))  # Output should be Quashie, J.
print(format_name('Vena Babiarz'))  # Output should be Babiarz, V.
print(format_name('Karrie Lain'))  # Output should be Lain, K.
print(format_name('Tobias Dermody'))  # Output should be Dermody, T.
print(format_name('Celsa Hopkins'))  # Output should be Hopkins, C.
print(format_name('Kimberley Halpern'))  # Output should be Halpern, K.
print(format_name('Phillip Rowden'))  # Output should be Rowden, P.
print(format_name('Elias Neil'))  # Output should be Neil, E.
print(format_name('Lashanda Cortes'))  # Output should be Cortes, L.
print(format_name('Mackenzie Spell'))  # Output should be Spell, M.
print(format_name('Kathlyn Eccleston'))  # Output should be Eccleston, K.
print(format_name('Georgina Brescia'))  # Output should be Brescia, G.
print(format_name('Beata Miah'))  # Output should be Miah, B.
print(format_name('Desiree Seamons'))  # Output should be Seamons, D.
print(format_name('Jeanice Soderstrom'))  # Output should be Soderstrom, J.
print(format_name('Mariel Jurgens'))  # Output should be Jurgens, M.
print(format_name('Alida Bogle'))  # Output should be Bogle, A.
print(format_name('Jacqualine Olague'))  # Output should be Olague, J.
print(format_name('Joaquin Clasen'))  # Output should be Clasen, J.
print(format_name('Samuel Richert'))  # Output should be Richert, S.
print(format_name('Malissa Marcus'))  # Output should be Marcus, M.
print(format_name('Alaina Partida'))  # Output should be Partida, A.
print(format_name('Trinidad Mulloy'))  # Output should be Mulloy, T.
print(format_name('Carlene Garrard'))  # Output should be Garrard, C.
print(format_name('Melodi Chism'))  # Output should be Chism, M.
print(format_name('Bess Chilcott'))  # Output should be Chilcott, B.
print(format_name('Chong Aylward'))  # Output should be Aylward, C.
print(format_name('Jani Ramthun'))  # Output should be Ramthun, J.
print(format_name('Jacquiline Heintz'))  # Output should be Heintz, J.
print(format_name('Hayley Marquess'))  # Output should be Marquess, H.
print(format_name('Andria Spagnoli'))  # Output should be Spagnoli, A.
print(format_name('Irwin Covelli'))  # Output should be Covelli, I.
print(format_name('Gertude Montiel'))  # Output should be Montiel, G.
print(format_name('Stefany Reily'))  # Output should be Reily, S.
print(format_name('Rae Mcgaughey'))  # Output should be Mcgaughey, R.
print(format_name('Cruz Latimore'))  # Output should be Latimore, C.
print(format_name('Maryann Casler'))  # Output should be Casler, M.
print(format_name('Annalisa Gregori'))  # Output should be Gregori, A.
print(format_name('Jenee Pannell'))  # Output should be Pannell, J.

# End time: 2024-03-30 22:05:11.568712
# Elapsed time in seconds: 18.349539697999717