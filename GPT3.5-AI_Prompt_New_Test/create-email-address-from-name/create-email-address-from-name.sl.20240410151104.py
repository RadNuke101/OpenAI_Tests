# Start time: 2024-04-10 15:17:20.082598

'''
Prompt:
The prompt describes the relationship between the inputs and outputs. Given that the prompt is: Summary for Input Column 1 (First Names):
- The input column 1 consists of first names such as 'brown', 'traci', 'thomas', 'linda', 'ward', and 'jack'.
- The names in this column vary in length and do not follow a specific pattern.

Summary for Input Column 2 (Last Names):
- The input column 2 consists of last names such as 'brown', 'traci', 'thomas', 'linda', 'ward', and 'jack'.
- The names in this column also vary in length and do not follow a specific pattern.

Summary for Output Column (Email Addresses):
- The output column consists of email addresses in the format of first initial of last name + full last name + '@acme.com'.
- The email addresses are unique for each input pair of first and last names.

Relationship between Input and Output:
- The output email addresses are generated by taking the first initial of the last name and combining it with the full last name followed by '@acme.com'.
- This relationship ensures that each input pair of first and last names results in a unique email address.
- The output email addresses provide a standardized format for communication purposes based on the input first and last names., and input as ['brown', 'traci'] output is tbrown_acme.com, input as ['thomas', 'linda'] output is lthomas_acme.com, input as ['ward', 'jack'] output is jward_acme.com, , generate a python function that matches the given input and output above, treating the input and output as strings, not lists. If the input has multiple list elements, that means there are separate inputs that should be passed as separate arguments to the python function. Include the above input in test cases. Do not include the output of the test code in the python program. The generated python code should have only executable statements and comments. The function should return the output, not print it. Do not include assert statements. Name the generated python function as generated_function. Make sure to generate a python function as defined above.
'''

def generated_function(first_name, last_name):
    # Generate email address by combining first initial of last name with full last name and '@acme.com'
    email = last_name[0] + last_name + '@acme.com'
    return email

# Test cases
print(generated_function('brown', 'traci'))
print(generated_function('thomas', 'linda'))
print(generated_function('ward', 'jack'))
print(generated_function("brown", "traci"))  ## Output: tbrown_acme.com
print(generated_function("thomas", "linda"))  ## Output: lthomas_acme.com
print(generated_function("ward", "jack"))  ## Output: jward_acme.com

# End time: 2024-04-10 15:17:21.259000
# Elapsed time in seconds: 1.1763763570002084


# APPEND TEST SCRIPTS...
print(generated_function("brown", "traci"))  ## Output: tbrown_acme.com
print(generated_function("thomas", "linda"))  ## Output: lthomas_acme.com
print(generated_function("ward", "jack"))  ## Output: jward_acme.com


print(generated_function("reynolds", "olivia"))  ### Output: oreynolds_acme.com
print(generated_function("anderson", "jackson"))  ### Output: janderson_acme.com

# TEST SCRIPTS APPENDED!

